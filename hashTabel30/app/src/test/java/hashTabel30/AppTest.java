/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hashTabel30;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
    //Adding a key/value to your hashtable results in the value being in the data structure
    //Retrieving based on a key returns the value stored
    //Successfully returns null for a key that does not exist in the hashtable
    //Successfully handle a collision within the hashtable
    //Successfully retrieve a value from a bucket within the hashtable that has a collision
    //Successfully hash a key to an in-range value
    @Test void testCode30() {
        HashTable<String>newHashTable=new HashTable<>(4);

        newHashTable.add("a","firtAdd");
        newHashTable.add("tow","towAdd");
        String resultAdd="firtAdd";
        String resultAddTow="towAdd";

        assertEquals(resultAdd,newHashTable.get("a"));
        assertEquals(resultAddTow,newHashTable.get("tow"));

        assertTrue(newHashTable.contain("a"));
        assertFalse(newHashTable.contain("b"));

        assertEquals(1, newHashTable.getHash("hala"));


    }
    @Test void testCode31(){
        HashmapRepeatedWord testRepeated=new HashmapRepeatedWord();
        String test="It was a queer, sultry SUMMer , the summer they electrocuted the Rosenbergs, and I didnâ€™t know what I was doing in New York...";
        assertEquals("summer", testRepeated.findFirstRepeatedWord(test));

    }

}
